<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Radius Docs â€“ observability</title>
    <link>https://docs.radapp.io/tags/observability/</link>
    <description>Recent content in observability on Radius Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://docs.radapp.io/tags/observability/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Guides: Overview: Control plane logs</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/logs/overview/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/logs/overview/overview/</guid>
      <description>
        
        
        &lt;p&gt;The Radius control plane produces logs that you can use to monitor and troubleshoot the control plane. This document describes how to collect and search logs, as well as the log schema.&lt;/p&gt;
&lt;h2 id=&#34;log-formats&#34;&gt;Log formats&lt;/h2&gt;
&lt;p&gt;The Radius control plane outputs structured logs to stdout, either plain-text or JSON-formatted. By default, services produce JSON formatted logs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to use a search engine such as Elastic Search or Azure Monitor to search logs, it is strongly recommended to use JSON-formatted logs which the log collector and the search engine can parse using the built-in JSON parser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;log-collectors&#34;&gt;Log collectors&lt;/h2&gt;
&lt;h3 id=&#34;fluentd&#34;&gt;Fluentd&lt;/h3&gt;
&lt;p&gt;If you run the control plane in a Kubernetes cluster, &lt;a href=&#34;https://www.fluentd.org/&#34;&gt;Fluentd&lt;/a&gt; is a popular container log collector. You can use Fluentd with a &lt;a href=&#34;https://docs.fluentd.org/parser/json&#34;&gt;JSON parser plugin&lt;/a&gt; to parse Radius JSON-formatted logs. This &lt;a href=&#34;https://docs.radapp.io/guides/operations/control-plane/logs/fluentd/&#34;&gt;how-to&lt;/a&gt; shows how to configure Fluentd in your cluster.&lt;/p&gt;
&lt;h3 id=&#34;azure-monitor&#34;&gt;Azure Monitor&lt;/h3&gt;
&lt;p&gt;If you are using Azure Kubernetes Service, you can use the &lt;a href=&#34;https://learn.microsoft.com/azure/aks/monitor-aks&#34;&gt;built-in agent to collect logs with Azure Monitor&lt;/a&gt; without needing to install Fluentd.&lt;/p&gt;
&lt;h2 id=&#34;search-engines&#34;&gt;Search engines&lt;/h2&gt;
&lt;h3 id=&#34;elastic-search-and-kibana&#34;&gt;Elastic Search and Kibana&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;https://www.fluentd.org/&#34;&gt;Fluentd&lt;/a&gt;, we recommend using Elastic Search and Kibana. This &lt;a href=&#34;https://docs.radapp.io/guides/operations/control-plane/logs/fluentd/&#34;&gt;how-to&lt;/a&gt; shows how to set up Elastic Search and Kibana in your Kubernetes cluster.&lt;/p&gt;
&lt;h3 id=&#34;azure-monitor-1&#34;&gt;Azure Monitor&lt;/h3&gt;
&lt;p&gt;If you are using the Azure Kubernetes Service, you can use &lt;a href=&#34;https://docs.microsoft.com/azure/azure-monitor/insights/container-insights-overview&#34;&gt;Azure Monitor for containers&lt;/a&gt; without installing any additional monitoring tools. Also read &lt;a href=&#34;https://learn.microsoft.com/azure/azure-monitor/containers/container-insights-onboard&#34;&gt;How to enable Azure Monitor for containers&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;log-schema&#34;&gt;Log schema&lt;/h2&gt;
&lt;p&gt;Control plane logs contain the following fields:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.iso.org/iso-8601-date-and-time-format.html&#34;&gt;ISO8601&lt;/a&gt; timestamp&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2011-10-05T14:48:00.000Z&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;severity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Log level. Available levels are info, warn, debug, and error.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;message&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Log message&lt;/td&gt;
&lt;td&gt;&lt;code&gt;proxying request target: http://de-api.radius-system:6443&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Logging scope&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ucplogger.api&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;caller&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Service logging point&lt;/td&gt;
&lt;td&gt;&lt;code&gt;planes/proxyplane.go:171&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Control plane version&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0.18&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;serviceName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name of control plane service&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ucplogger&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hostName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Service host name&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ucp-77bc9b4cbb-nmjlz&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;resourceId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The resourceId being affected, if applicable&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/apis/api.ucp.dev/v1alpha3/planes/deployments/local/resourcegroups/myrg/providers/Microsoft.Resources/deployments/rad-deploy-6c0d37b0-705e-454b-9167-877aa080e656&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;traceId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.w3.org/TR/trace-context/#trace-id&#34;&gt;w3c traceId&lt;/a&gt;. Used to uniquely identify a &lt;a href=&#34;https://www.w3.org/TR/trace-context/#dfn-distributed-traces&#34;&gt;distributed trace&lt;/a&gt; through a system.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;d1ba9c7d2326ee1b44eb0b8177ef554f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spanId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.w3.org/TR/trace-context/#parent-id&#34;&gt;w3c spanId&lt;/a&gt; The ID of this request as known by the caller. Also known as &lt;code&gt;parent-id&lt;/code&gt; in some tracing systems.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ce52a91ed3c86c6d&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;info&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2023-03-03T00:03:55.355Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ucplogger.api&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;caller&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;planes/proxyplane.go:171&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proxying request target: http://de-api.radius-system:6443&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;serviceName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ucplogger&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.18&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ucp-77bc9b4cbb-nmjlz&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resourceId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/apis/api.ucp.dev/v1alpha3/planes/deployments/local/resourcegroups/myrg/providers/Microsoft.Resources/deployments/rad-deploy-6c0d37b0-705e-454b-9167-877aa080e656&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;traceId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2435428bbf8533c68b122b1ef31bb42f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;spanId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;30a88181fe683c00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.radapp.io/guides/operations/control-plane/logs/fluentd/&#34;&gt;How-to: Set up Fluentd, Elastic search, and Kibana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/azure/aks/monitor-aks&#34;&gt;How-to: Set up Azure Monitor for containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: How-To: Set up Fluentd, Elastic search and Kibana in Kubernetes</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/logs/fluentd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/logs/fluentd/</guid>
      <description>
        
        
        &lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.radapp.io/guides/operations/kubernetes/overview/#supported-clusters&#34;&gt;Setup a supported Kubernetes cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;&gt;kubectl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34;&gt;Helm 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install-elastic-search-and-kibana&#34;&gt;Install Elastic search and Kibana&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Kubernetes namespace for monitoring tools&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create namespace radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the helm repo for Elastic Search&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo add elastic https://helm.elastic.co
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Elastic Search using Helm&lt;/p&gt;
&lt;p&gt;&lt;em&gt;By default, the chart creates three replicas which must be on different nodes. If your cluster has fewer than 3 nodes, specify a smaller number of replicas with the &lt;code&gt;--set replicas=1&lt;/code&gt; flag:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install elasticsearch elastic/elasticsearch --version 7.17.3 -n radius-monitoring --set replicas&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;If you are using minikube or simply want to disable persistent volumes for development purposes, you can do so with &lt;code&gt;--set persistence.enabled=false&lt;/code&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install elasticsearch elastic/elasticsearch --version 7.17.3 -n radius-monitoring --set persistence.enabled&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false,replicas&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Kibana&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install kibana elastic/kibana --version 7.17.3 -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure that Elastic Search and Kibana are running in your Kubernetes cluster&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                            READY   STATUS    RESTARTS   AGE
elasticsearch-master-0          1/1     Running   0          6m58s
kibana-kibana-95bc54b89-zqdrk   1/1     Running   0          4m21s
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;install-fluentd&#34;&gt;Install Fluentd&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install config map and Fluentd as a daemonset&lt;/p&gt;
&lt;p&gt;Download these config files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;fluentd-config-map.yaml&#34;&gt;fluentd-config-map.yaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;fluentd-radius-with-rbac.yaml&#34;&gt;fluentd-radius-with-rbac.yaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Note: If you already have Fluentd running in your cluster, enable the nested json parser so that it can parse JSON-formatted logs from radius.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Apply the configurations to your cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f ./fluentd-config-map.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f ./fluentd-radius-with-rbac.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure that Fluentd is running as a daemonset. The number of Fluentd instances should be the same as the number of cluster nodes. In the example below, there is only one node in the cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n kube-system -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                          READY   STATUS    RESTARTS   AGE
coredns-6955765f44-cxjxk      1/1     Running   0          4m41s
coredns-6955765f44-jlskv      1/1     Running   0          4m41s
etcd-m01                      1/1     Running   0          4m48s
fluentd-sdrld                 1/1     Running   0          14s
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;install-radius-control-plane&#34;&gt;Install Radius control plane&lt;/h2&gt;
&lt;p&gt;Visit the &lt;a href=&#34;https://docs.radapp.io/guides/operations/kubernetes/&#34;&gt;Kubernetes docs&lt;/a&gt; to learn how to install the Radius control plane. By default, Radius has JSON logging enabled.&lt;/p&gt;
&lt;p&gt;For Kubernetes, you can install with the rad CLI:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rad install kubernetes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;search-logs&#34;&gt;Search logs&lt;/h2&gt;
&lt;p&gt;Once the Radius control plane is installed, you can search the logs using Kibana.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: There is a small delay for Elastic Search to index the logs that Fluentd sends. You may need to wait a minute and refresh to see your logs.&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Port-forward from localhost to &lt;code&gt;svc/kibana-kibana&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl port-forward svc/kibana-kibana &lt;span style=&#34;color:#ae81ff&#34;&gt;5601&lt;/span&gt; -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Forwarding from 127.0.0.1:5601 -&amp;gt; 5601
Forwarding from [::1]:5601 -&amp;gt; 5601
Handling connection for 5601
Handling connection for 5601
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browse to &lt;code&gt;http://localhost:5601&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expand the drop-down menu and click &lt;strong&gt;Management â†’ Stack Management&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-1.png&#34; alt=&#34;Stack Management item under Kibana Management menu options&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the Stack Management page, select &lt;strong&gt;Data â†’ Index Management&lt;/strong&gt; and wait until &lt;code&gt;radius-*&lt;/code&gt; is indexed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-2.png&#34; alt=&#34;Index Management view on Kibana Stack Management page&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once &lt;code&gt;radius-*&lt;/code&gt; is indexed, click on &lt;strong&gt;Kibana â†’ Index Patterns&lt;/strong&gt; and then the &lt;strong&gt;Create index pattern&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-3.png&#34; alt=&#34;Kibana create index pattern button&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define a new index pattern by typing &lt;code&gt;radius*&lt;/code&gt; into the &lt;strong&gt;Index Pattern name&lt;/strong&gt; field, then click the &lt;strong&gt;Next step&lt;/strong&gt; button to continue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-4.png&#34; alt=&#34;Kibana define an index pattern page&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the primary time field to use with the new index pattern by selecting the &lt;code&gt;@timestamp&lt;/code&gt; option from the &lt;strong&gt;Time field&lt;/strong&gt; drop-down. Click the &lt;strong&gt;Create index pattern&lt;/strong&gt; button to complete creation of the index pattern.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-5.png&#34; alt=&#34;Kibana configure settings page for creating an index pattern&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The newly created index pattern should be shown. Confirm that the fields of interest such as &lt;code&gt;scope&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;app_id&lt;/code&gt;, &lt;code&gt;level&lt;/code&gt;, etc. are being indexed by using the search box in the &lt;strong&gt;Fields&lt;/strong&gt; tab.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: If you cannot find the indexed field, please wait. The time it takes to search across all indexed fields depends on the volume of data and size of the resource that the elastic search is running on.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-6.png&#34; alt=&#34;View of created Kibana index pattern&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To explore the indexed data, expand the drop-down menu and click &lt;strong&gt;Analytics â†’ Discover&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-7.png&#34; alt=&#34;Discover item under Kibana Analytics menu options&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the search box, type in a query string such as &lt;code&gt;scope:*&lt;/code&gt; and click the &lt;strong&gt;Refresh&lt;/strong&gt; button to view the results.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: This can take a long time. The time it takes to return all results depends on the volume of data and size of the resource that the elastic search is running on.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kibana-8.png&#34; alt=&#34;Using the search box in the Kibana Analytics Discover page&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.fluentd.org/v/0.12/articles/kubernetes-fluentd&#34;&gt;Fluentd for Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elastic/helm-charts/tree/master/elasticsearch&#34;&gt;Elastic search helm chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elastic/helm-charts/tree/master/kibana&#34;&gt;Kibana helm chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/kibana/current/kuery-query.html&#34;&gt;Kibana Query Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: How-To: Collect metrics with Prometheus</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/metrics/prometheus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/metrics/prometheus/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; collects and stores metrics as time series data. This guide will show you how to collect Radius control plane metrics to then be visualized and queried.&lt;/p&gt;
&lt;h2 id=&#34;install-prometheus-on-kubernetes&#34;&gt;Install Prometheus on Kubernetes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have the following pre-requisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.radapp.io/guides/operations/kubernetes/overview/#supported-clusters&#34;&gt;Supported Kubernetes cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;&gt;kubectl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34;&gt;Helm 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.radapp.io/guides/operations/kubernetes/install/&#34;&gt;Radius control plane installed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a namespace that can be used to deploy the Grafana and Prometheus monitoring tools:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create namespace radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Prometheus into your monitoring namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install radius-prom prometheus-community/prometheus -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are Minikube user or want to disable persistent volume for development purposes, you can disable it by using the following command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install radius-prom prometheus-community/prometheus -n radius-monitoring --set alertmanager.persistentVolume.enable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false --set pushgateway.persistentVolume.enabled&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false --set server.persistentVolume.enabled&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validate your Prometheus installation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see something similar to the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                                                  READY   STATUS    RESTARTS   AGE
radius-prom-kube-state-metrics-9849d6cc6-t94p8        1/1     Running   0          4m58s
radius-prom-prometheus-alertmanager-749cc46f6-9b5t8   2/2     Running   0          4m58s
radius-prom-prometheus-node-exporter-5jh8p            1/1     Running   0          4m58s
radius-prom-prometheus-node-exporter-88gbg            1/1     Running   0          4m58s
radius-prom-prometheus-node-exporter-bjp9f            1/1     Running   0          4m58s
radius-prom-prometheus-pushgateway-688665d597-h4xx2   1/1     Running   0          4m58s
radius-prom-prometheus-server-694fd8d7c-q5d59         2/2     Running   0          4m58s
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Done! Prometheus is now installed and ready to collect metrics from the Radius control plane.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;next-step-add-a-grafana-dashboard&#34;&gt;Next step: Add a Grafana dashboard&lt;/h2&gt;
&lt;p&gt;Now that you have Prometheus installed, you can visualize the metrics using Grafana. Follow the &lt;a href=&#34;https://docs.radapp.io/guides/operations/control-plane/metrics/grafana/&#34;&gt;Grafana installation guide&lt;/a&gt; to get up and running with a Grafana dashboard.&lt;/p&gt;









&lt;a class=&#34;btn  btn-primary&#34; href=&#34;https://docs.radapp.io/guides/operations/control-plane/metrics/grafana/&#34; role=&#34;button&#34;&gt;Next: Add a Grafana dashboard&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus-community/helm-charts&#34;&gt;Prometheus Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/&#34;&gt;Prometheus Query Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: How-To: Observe metrics with Grafana</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/metrics/grafana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/metrics/grafana/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; is an open source visualization and analytics tool that allows you to query, visualize, alert on, and explore your metrics. This guide will show you how to install Grafana and configure it to visualize the Radius control plane metrics from Prometheus.&lt;/p&gt;
&lt;h2 id=&#34;example-dashboards&#34;&gt;Example dashboards&lt;/h2&gt;
&lt;p&gt;There are two example dashboards that you can import into Grafana to quickly get started visualizing your metrics and then customize them to meet your needs.&lt;/p&gt;
&lt;h3 id=&#34;control-plane-overview&#34;&gt;Control plane overview&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/radius-project/radius/main/grafana/radius-overview-dashboard.json&#34;&gt;radius-overview-dashboard.json&lt;/a&gt; template shows Radius and Deployment Engine statuses, including runtime, and server-side health:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;radius-overview-1.png&#34; alt=&#34;1st screenshot of the Radius Overview Dashboard&#34; width=1200&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;radius-overview-2.png&#34; alt=&#34;2nd screenshot of the Radius Overview Dashboard&#34; width=1200&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3 id=&#34;resource-provider-overview&#34;&gt;Resource provider overview&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/radius-project/radius/main/grafana/radius-resource-provider-dashboard.json&#34;&gt;radius-resource-provider-dashboard.json&lt;/a&gt; template shows Radius Resource Provider status, including runtime, server-side, and operations health:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;radius-resource-provider-1.png&#34; alt=&#34;1st screenshot of the Radius Resource Provider Dashboard&#34; width=1200&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;radius-resource-provider-2.png&#34; alt=&#34;2nd screenshot of the Radius Resource Provider Dashboard&#34; width=1200&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&#34;setup-on-kubernetes&#34;&gt;Setup on Kubernetes&lt;/h2&gt;
&lt;h3 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.radapp.io/guides/operations/control-plane/metrics/prometheus/&#34;&gt;Setup Prometheus&lt;/a&gt; on your Kubernetes cluster&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34;&gt;Helm 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-grafana&#34;&gt;Install Grafana&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add the Grafana Helm repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo add grafana https://grafana.github.io/helm-charts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the chart:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install grafana grafana/grafana -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are Minikube user or want to disable persistent volume for development purpose, you can disable it by using the following command instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm install grafana grafana/grafana -n radius-monitoring --set persistence.enabled&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Retrieve the admin password for Grafana login:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get secret --namespace radius-monitoring grafana -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.data.admin-password}&amp;#34;&lt;/span&gt; | base64 --decode ; echo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will get a password similar to &lt;code&gt;cj3m0OfBNx8SLzUlTx91dEECgzRlYJb60D2evof1%&lt;/code&gt;. Remove the &lt;code&gt;%&lt;/code&gt; character from the password to get &lt;code&gt;cj3m0OfBNx8SLzUlTx91dEECgzRlYJb60D2evof1&lt;/code&gt; as the admin password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validate that Grafana is running in your cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see something similar to the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                        READY   STATUS       RESTARTS   AGE
grafana-c49889cff-x56vj     1/1     Running      0          5m10s
...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;configure-prometheus-as-data-source&#34;&gt;Configure Prometheus as data source&lt;/h3&gt;
&lt;p&gt;Now that Grafana is installed, you need to configure it to use Prometheus as a data source.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Port-forward to your Grafana service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl port-forward svc/grafana 8080:80 -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a browser to &lt;a href=&#34;http://localhost:8080&#34;&gt;&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login to Grafana&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Username: &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Password: Password from above&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Configuration&lt;/code&gt; and &lt;code&gt;Data Sources&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Prometheus as a data source.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get your Prometheus HTTP URL:&lt;/p&gt;
&lt;p&gt;The Prometheus HTTP URL follows the format &lt;code&gt;http://&amp;lt;prometheus service endpoint&amp;gt;.&amp;lt;namespace&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Start by getting the Prometheus server endpoint by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get svc -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see something similar to the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                                     TYPE        CLUSTER-IP        EXTERNAL-IP   PORT(S)             AGE
radius-prom-kube-state-metrics           ClusterIP   10.0.174.177      &amp;lt;none&amp;gt;        8080/TCP            7d9h
radius-prom-prometheus-alertmanager      ClusterIP   10.0.255.199      &amp;lt;none&amp;gt;        80/TCP              7d9h
radius-prom-prometheus-node-exporter     ClusterIP   None              &amp;lt;none&amp;gt;        9100/TCP            7d9h
radius-prom-prometheus-pushgateway       ClusterIP   10.0.190.59       &amp;lt;none&amp;gt;        9091/TCP            7d9h
radius-prom-prometheus-server            ClusterIP   10.0.172.191      &amp;lt;none&amp;gt;        80/TCP              7d9h
grafana                                  ClusterIP   10.0.15.229       &amp;lt;none&amp;gt;        80/TCP              5d5h
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this example the server name is &lt;code&gt;radius-prom-prometheus-server&lt;/code&gt; and the namespace is &lt;code&gt;radius-monitoring&lt;/code&gt;, so the HTTP URL will be &lt;code&gt;http://radius-prom-prometheus-server.radius-monitoring&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill in the following settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: &lt;code&gt;Radius&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTTP URL: &lt;code&gt;http://radius-prom-prometheus-server.radius-monitoring&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Default: On&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Save &amp;amp; Test&lt;/code&gt; button to verify that the connection succeeded.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;import-dashboards-in-grafana&#34;&gt;Import dashboards in Grafana&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download the Grafana dashboard templates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/radius-project/radius/main/grafana/radius-overview-dashboard.json&#34;&gt;radius-overview-dashboard.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/radius-project/radius/main/grafana/radius-resource-provider-dashboard.json&#34;&gt;radius-resource-provider-dashboard.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In the upper left corner of the Grafana home screen, click the &amp;ldquo;+&amp;rdquo; option, then &amp;ldquo;Import&amp;rdquo;, and select your templates.&lt;/li&gt;
&lt;li&gt;Select the dashboard that you imported and enjoy!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus-community/helm-charts&#34;&gt;Prometheus Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/coreos/kube-prometheus&#34;&gt;Prometheus on Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/&#34;&gt;Prometheus Query Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: How-To: Set up Jaeger for distributed tracing</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/traces/jaeger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/traces/jaeger/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://www.jaegertracing.io/&#34;&gt;Jaeger&lt;/a&gt; is an open source distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in microservice architectures. It manages both the collection and lookup of this data.&lt;/p&gt;
&lt;p&gt;The following steps show you how to configure the Radius control plane to send distributed tracing data to Jaeger running as a container in your Kubernetes cluster and how to view the data.&lt;/p&gt;
&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;&gt;kubectl CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-1-install-jaeger-on-kubernetes&#34;&gt;Step 1: Install Jaeger on Kubernetes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the namespace &lt;code&gt;radius-monitoring&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create namespace radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the file &lt;code&gt;jaeger.yaml&lt;/code&gt;, and paste the following YAML:&lt;/p&gt;

   
   
   
   
   
   
   
   
   &lt;a class=&#34;btn  btn-primary&#34; href=&#34;jaeger.yaml&#34; role=&#34;button&#34;&gt;Download jaeger.yaml&lt;/a&gt;&lt;br /&gt;
   &lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Jaeger:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f jaeger.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for Jaeger to be up and running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl wait deploy --selector app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jaeger --for&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;condition&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;available -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-2-configure-radius-control-plane&#34;&gt;Step 2: Configure Radius control plane&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the Radius control plane with your Zipkin endpoint set to your Jaeger collector endpoint using &lt;a href=&#34;https://docs.radapp.io/reference/cli/rad_install_kubernetes/&#34;&gt;&lt;code&gt;rad install kubernetes&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rad install kubernetes --set  global.zipkin.url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://jaeger-collector.radius-monitoring.svc.cluster.local:9411/api/v2/spans
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;http://jaeger-collector.radius-monitoring.svc.cluster.local:9411/api/v2/spans&lt;/code&gt; is the default URL for Jaeger when installed using the above instructions. If you have changed the service name or namespace, use that instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-3-view-tracing-data&#34;&gt;Step 3: View Tracing Data&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Port forward the Jaeger service to your local machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl port-forward svc/tracing &lt;span style=&#34;color:#ae81ff&#34;&gt;16686&lt;/span&gt; -n radius-monitoring 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your browser, go to &lt;a href=&#34;http://localhost:16686&#34;&gt;http://localhost:16686&lt;/a&gt; to see the Jaeger UI:&lt;/p&gt;
&lt;img src=&#34;jaeger_ui.png&#34; alt=&#34;&#34; style=&#34;width:100%&#34; &gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jaegertracing.io/docs/1.21/getting-started/#all-in-one&#34;&gt;Jaeger Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: How-To: Set up Zipkin for distributed tracing</title>
      <link>https://docs.radapp.io/guides/operations/control-plane/traces/zipkin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.radapp.io/guides/operations/control-plane/traces/zipkin/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://zipkin.io/&#34;&gt;Zipkin&lt;/a&gt; is an open source distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in microservice architectures. It manages both the collection and lookup of this data.&lt;/p&gt;
&lt;p&gt;The following steps show you how to configure the &lt;a href=&#34;https://docs.radapp.io/concepts/architecture/&#34;&gt;Radius control plane&lt;/a&gt; components to send distributed tracing data to Zipkin running as a container in your Kubernetes cluster and how to view the data.&lt;/p&gt;
&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;&gt;kubectl CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-1-install-zipkin-on-kubernetes&#34;&gt;Step 1: Install Zipkin on Kubernetes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the namespace &lt;code&gt;radius-monitoring&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create namespace radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the Zipkin deployment and service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create deployment zipkin --image openzipkin/zipkin -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl expose deployment zipkin --type ClusterIP --port &lt;span style=&#34;color:#ae81ff&#34;&gt;9411&lt;/span&gt; -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-2-configure-radius-control-plane&#34;&gt;Step 2: Configure Radius control plane&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the Radius control plane with your Zipkin endpoint set using &lt;a href=&#34;https://docs.radapp.io/reference/cli/rad_install_kubernetes/&#34;&gt;&lt;code&gt;rad install kubernetes&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rad install kubernetes --set  global.zipkin.url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://zipkin.radius-monitoring.svc.cluster.local:9411/api/v2/spans
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;http://zipkin.radius-monitoring.svc.cluster.local:9411/api/v2/spans&lt;/code&gt; is the default URL for Zipkin when installed using the above instructions. If you have changed the service name or namespace, use that instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-3-view-tracing-data&#34;&gt;Step 3: View Tracing Data&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Port forward the Zipkin service to your local machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl port-forward svc/zipkin 9411:9411 -n radius-monitoring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your browser, go to &lt;a href=&#34;http://localhost:9411&#34;&gt;http://localhost:9411&lt;/a&gt; to see the Zipkin UI and run a query:&lt;/p&gt;
&lt;img src=&#34;zipkin_ui.png&#34; alt=&#34;&#34; style=&#34;width:100%&#34; &gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Done! You can now use the Zipkin UI to view tracing data for your Radius control plane.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zipkin.io/&#34;&gt;Zipkin for distributed tracing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
